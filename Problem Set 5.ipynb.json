{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2\n",
    "# International Organization: The WHO (World Health Organization)\n",
    "# The WHO by its name is responsible for world health matters and handles issues such as COVID 19. \n",
    "# I would imagine the data from the WHO to be very accurate as it is of very high importance that they\n",
    "# provide accurate data. The WHO has perhaps been one of the leading credible sources for information on the virus \n",
    "# since the outbreak started. \n",
    "\n",
    "# Government Organization: China CDC\n",
    "# In short, the China CDC is the equivalent of the CDC here in the United States. \n",
    "# I would imagine this data to be fairly accurate. However, I would verify data from the China CDC with another \n",
    "# source, as there were allegations of China intentionally under-reporting cases during the outbreak. \n",
    "\n",
    "# News Organization: BNO News\n",
    "# BNO News is a Dutch news corporation. I would imagine that the data from this news outlet to be accurate, \n",
    "# however in considering good data analytics practices it would not hurt to double check the information they provide\n",
    "# against another source. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import pprint as pprint\n",
    "import matplotlib.pyplot as plt\n",
    "import datetime as dt\n",
    "pd.options.display.max_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import scipy.stats\n",
    "import statsmodels.formula.api \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>1/22/20</th>\n",
       "      <th>1/23/20</th>\n",
       "      <th>1/24/20</th>\n",
       "      <th>1/25/20</th>\n",
       "      <th>1/26/20</th>\n",
       "      <th>1/27/20</th>\n",
       "      <th>...</th>\n",
       "      <th>4/4/20</th>\n",
       "      <th>4/5/20</th>\n",
       "      <th>4/6/20</th>\n",
       "      <th>4/7/20</th>\n",
       "      <th>4/8/20</th>\n",
       "      <th>4/9/20</th>\n",
       "      <th>4/10/20</th>\n",
       "      <th>4/11/20</th>\n",
       "      <th>4/12/20</th>\n",
       "      <th>4/13/20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>299</td>\n",
       "      <td>349</td>\n",
       "      <td>367</td>\n",
       "      <td>423</td>\n",
       "      <td>444</td>\n",
       "      <td>484</td>\n",
       "      <td>521</td>\n",
       "      <td>555</td>\n",
       "      <td>607</td>\n",
       "      <td>665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>333</td>\n",
       "      <td>361</td>\n",
       "      <td>377</td>\n",
       "      <td>383</td>\n",
       "      <td>400</td>\n",
       "      <td>409</td>\n",
       "      <td>416</td>\n",
       "      <td>433</td>\n",
       "      <td>446</td>\n",
       "      <td>467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1251</td>\n",
       "      <td>1320</td>\n",
       "      <td>1423</td>\n",
       "      <td>1468</td>\n",
       "      <td>1572</td>\n",
       "      <td>1666</td>\n",
       "      <td>1761</td>\n",
       "      <td>1825</td>\n",
       "      <td>1914</td>\n",
       "      <td>1983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>466</td>\n",
       "      <td>501</td>\n",
       "      <td>525</td>\n",
       "      <td>545</td>\n",
       "      <td>564</td>\n",
       "      <td>583</td>\n",
       "      <td>601</td>\n",
       "      <td>601</td>\n",
       "      <td>638</td>\n",
       "      <td>646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>NaN</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>261</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>262</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>263</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>264 rows × 87 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Province/State         Country/Region        Lat       Long  \\\n",
       "0                          NaN            Afghanistan  33.000000  65.000000   \n",
       "1                          NaN                Albania  41.153300  20.168300   \n",
       "2                          NaN                Algeria  28.033900   1.659600   \n",
       "3                          NaN                Andorra  42.506300   1.521800   \n",
       "4                          NaN                 Angola -11.202700  17.873900   \n",
       "..                         ...                    ...        ...        ...   \n",
       "259  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "260                        NaN            South Sudan   6.877000  31.307000   \n",
       "261                        NaN         Western Sahara  24.215500 -12.885800   \n",
       "262                        NaN  Sao Tome and Principe   0.186360   6.613081   \n",
       "263                        NaN                  Yemen  15.552727  48.516388   \n",
       "\n",
       "     1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  1/27/20  ...  4/4/20  \\\n",
       "0          0        0        0        0        0        0  ...     299   \n",
       "1          0        0        0        0        0        0  ...     333   \n",
       "2          0        0        0        0        0        0  ...    1251   \n",
       "3          0        0        0        0        0        0  ...     466   \n",
       "4          0        0        0        0        0        0  ...      10   \n",
       "..       ...      ...      ...      ...      ...      ...  ...     ...   \n",
       "259        0        0        0        0        0        0  ...       0   \n",
       "260        0        0        0        0        0        0  ...       0   \n",
       "261        0        0        0        0        0        0  ...       0   \n",
       "262        0        0        0        0        0        0  ...       0   \n",
       "263        0        0        0        0        0        0  ...       0   \n",
       "\n",
       "     4/5/20  4/6/20  4/7/20  4/8/20  4/9/20  4/10/20  4/11/20  4/12/20  \\\n",
       "0       349     367     423     444     484      521      555      607   \n",
       "1       361     377     383     400     409      416      433      446   \n",
       "2      1320    1423    1468    1572    1666     1761     1825     1914   \n",
       "3       501     525     545     564     583      601      601      638   \n",
       "4        14      16      17      19      19       19       19       19   \n",
       "..      ...     ...     ...     ...     ...      ...      ...      ...   \n",
       "259       1       1       1       1       1        1        1        1   \n",
       "260       1       1       2       2       3        4        4        4   \n",
       "261       4       4       4       4       4        4        4        6   \n",
       "262       0       4       4       4       4        4        4        4   \n",
       "263       0       0       0       0       0        1        1        1   \n",
       "\n",
       "     4/13/20  \n",
       "0        665  \n",
       "1        467  \n",
       "2       1983  \n",
       "3        646  \n",
       "4         19  \n",
       "..       ...  \n",
       "259        1  \n",
       "260        4  \n",
       "261        6  \n",
       "262        4  \n",
       "263        1  \n",
       "\n",
       "[264 rows x 87 columns]"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# opening the global cases file\n",
    "globalCases = pd.read_csv(\"time-series-global-cases.csv\")\n",
    "globalCases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 3\n",
    "def loadAndCleanData(file):\n",
    "    pandaFile = pd.read_csv(file)\n",
    "    pandaFile.fillna(value = 0, inplace = True)\n",
    "    return pandaFile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>1/22/20</th>\n",
       "      <th>1/23/20</th>\n",
       "      <th>1/24/20</th>\n",
       "      <th>1/25/20</th>\n",
       "      <th>1/26/20</th>\n",
       "      <th>1/27/20</th>\n",
       "      <th>...</th>\n",
       "      <th>4/4/20</th>\n",
       "      <th>4/5/20</th>\n",
       "      <th>4/6/20</th>\n",
       "      <th>4/7/20</th>\n",
       "      <th>4/8/20</th>\n",
       "      <th>4/9/20</th>\n",
       "      <th>4/10/20</th>\n",
       "      <th>4/11/20</th>\n",
       "      <th>4/12/20</th>\n",
       "      <th>4/13/20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>299</td>\n",
       "      <td>349</td>\n",
       "      <td>367</td>\n",
       "      <td>423</td>\n",
       "      <td>444</td>\n",
       "      <td>484</td>\n",
       "      <td>521</td>\n",
       "      <td>555</td>\n",
       "      <td>607</td>\n",
       "      <td>665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>333</td>\n",
       "      <td>361</td>\n",
       "      <td>377</td>\n",
       "      <td>383</td>\n",
       "      <td>400</td>\n",
       "      <td>409</td>\n",
       "      <td>416</td>\n",
       "      <td>433</td>\n",
       "      <td>446</td>\n",
       "      <td>467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1251</td>\n",
       "      <td>1320</td>\n",
       "      <td>1423</td>\n",
       "      <td>1468</td>\n",
       "      <td>1572</td>\n",
       "      <td>1666</td>\n",
       "      <td>1761</td>\n",
       "      <td>1825</td>\n",
       "      <td>1914</td>\n",
       "      <td>1983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>466</td>\n",
       "      <td>501</td>\n",
       "      <td>525</td>\n",
       "      <td>545</td>\n",
       "      <td>564</td>\n",
       "      <td>583</td>\n",
       "      <td>601</td>\n",
       "      <td>601</td>\n",
       "      <td>638</td>\n",
       "      <td>646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>261</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>262</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>263</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>264 rows × 87 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Province/State         Country/Region        Lat       Long  \\\n",
       "0                            0            Afghanistan  33.000000  65.000000   \n",
       "1                            0                Albania  41.153300  20.168300   \n",
       "2                            0                Algeria  28.033900   1.659600   \n",
       "3                            0                Andorra  42.506300   1.521800   \n",
       "4                            0                 Angola -11.202700  17.873900   \n",
       "..                         ...                    ...        ...        ...   \n",
       "259  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "260                          0            South Sudan   6.877000  31.307000   \n",
       "261                          0         Western Sahara  24.215500 -12.885800   \n",
       "262                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "263                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "     1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  1/27/20  ...  4/4/20  \\\n",
       "0          0        0        0        0        0        0  ...     299   \n",
       "1          0        0        0        0        0        0  ...     333   \n",
       "2          0        0        0        0        0        0  ...    1251   \n",
       "3          0        0        0        0        0        0  ...     466   \n",
       "4          0        0        0        0        0        0  ...      10   \n",
       "..       ...      ...      ...      ...      ...      ...  ...     ...   \n",
       "259        0        0        0        0        0        0  ...       0   \n",
       "260        0        0        0        0        0        0  ...       0   \n",
       "261        0        0        0        0        0        0  ...       0   \n",
       "262        0        0        0        0        0        0  ...       0   \n",
       "263        0        0        0        0        0        0  ...       0   \n",
       "\n",
       "     4/5/20  4/6/20  4/7/20  4/8/20  4/9/20  4/10/20  4/11/20  4/12/20  \\\n",
       "0       349     367     423     444     484      521      555      607   \n",
       "1       361     377     383     400     409      416      433      446   \n",
       "2      1320    1423    1468    1572    1666     1761     1825     1914   \n",
       "3       501     525     545     564     583      601      601      638   \n",
       "4        14      16      17      19      19       19       19       19   \n",
       "..      ...     ...     ...     ...     ...      ...      ...      ...   \n",
       "259       1       1       1       1       1        1        1        1   \n",
       "260       1       1       2       2       3        4        4        4   \n",
       "261       4       4       4       4       4        4        4        6   \n",
       "262       0       4       4       4       4        4        4        4   \n",
       "263       0       0       0       0       0        1        1        1   \n",
       "\n",
       "     4/13/20  \n",
       "0        665  \n",
       "1        467  \n",
       "2       1983  \n",
       "3        646  \n",
       "4         19  \n",
       "..       ...  \n",
       "259        1  \n",
       "260        4  \n",
       "261        6  \n",
       "262        4  \n",
       "263        1  \n",
       "\n",
       "[264 rows x 87 columns]"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 3\n",
    "# running loadAndCleanData on the global cases file\n",
    "globalCasesCleaned = loadAndCleanData(\"time-series-global-cases.csv\")\n",
    "globalCasesCleaned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 4,    # 6\n",
    "def correctDateFormat(data):\n",
    "    data = data.melt(id_vars=data.columns[0:4], var_name=\"Date\", value_name=\"Confirmed\")\n",
    "    data[\"Date\"] = pd.to_datetime(data[\"Date\"])\n",
    "    return data\n",
    "# aded so that there is a datetime object  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21907</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21908</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21909</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21910</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21911</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21912 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Province/State         Country/Region        Lat       Long  \\\n",
       "0                              0            Afghanistan  33.000000  65.000000   \n",
       "1                              0                Albania  41.153300  20.168300   \n",
       "2                              0                Algeria  28.033900   1.659600   \n",
       "3                              0                Andorra  42.506300   1.521800   \n",
       "4                              0                 Angola -11.202700  17.873900   \n",
       "...                          ...                    ...        ...        ...   \n",
       "21907  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "21908                          0            South Sudan   6.877000  31.307000   \n",
       "21909                          0         Western Sahara  24.215500 -12.885800   \n",
       "21910                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "21911                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "            Date  Confirmed  \n",
       "0     2020-01-22          0  \n",
       "1     2020-01-22          0  \n",
       "2     2020-01-22          0  \n",
       "3     2020-01-22          0  \n",
       "4     2020-01-22          0  \n",
       "...          ...        ...  \n",
       "21907 2020-04-13          1  \n",
       "21908 2020-04-13          4  \n",
       "21909 2020-04-13          6  \n",
       "21910 2020-04-13          4  \n",
       "21911 2020-04-13          1  \n",
       "\n",
       "[21912 rows x 6 columns]"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 5\n",
    "# running function on global cases file\n",
    "globalCasesComplete = correctDateFormat(globalCasesCleaned)\n",
    "globalCasesComplete"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>1/22/20</th>\n",
       "      <th>1/23/20</th>\n",
       "      <th>1/24/20</th>\n",
       "      <th>1/25/20</th>\n",
       "      <th>1/26/20</th>\n",
       "      <th>1/27/20</th>\n",
       "      <th>...</th>\n",
       "      <th>4/4/20</th>\n",
       "      <th>4/5/20</th>\n",
       "      <th>4/6/20</th>\n",
       "      <th>4/7/20</th>\n",
       "      <th>4/8/20</th>\n",
       "      <th>4/9/20</th>\n",
       "      <th>4/10/20</th>\n",
       "      <th>4/11/20</th>\n",
       "      <th>4/12/20</th>\n",
       "      <th>4/13/20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>21</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>130</td>\n",
       "      <td>152</td>\n",
       "      <td>173</td>\n",
       "      <td>193</td>\n",
       "      <td>205</td>\n",
       "      <td>235</td>\n",
       "      <td>256</td>\n",
       "      <td>275</td>\n",
       "      <td>293</td>\n",
       "      <td>313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>17</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>26</td>\n",
       "      <td>26</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>NaN</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>261</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>262</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>263</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>264 rows × 87 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Province/State         Country/Region        Lat       Long  \\\n",
       "0                          NaN            Afghanistan  33.000000  65.000000   \n",
       "1                          NaN                Albania  41.153300  20.168300   \n",
       "2                          NaN                Algeria  28.033900   1.659600   \n",
       "3                          NaN                Andorra  42.506300   1.521800   \n",
       "4                          NaN                 Angola -11.202700  17.873900   \n",
       "..                         ...                    ...        ...        ...   \n",
       "259  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "260                        NaN            South Sudan   6.877000  31.307000   \n",
       "261                        NaN         Western Sahara  24.215500 -12.885800   \n",
       "262                        NaN  Sao Tome and Principe   0.186360   6.613081   \n",
       "263                        NaN                  Yemen  15.552727  48.516388   \n",
       "\n",
       "     1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  1/27/20  ...  4/4/20  \\\n",
       "0          0        0        0        0        0        0  ...       7   \n",
       "1          0        0        0        0        0        0  ...      20   \n",
       "2          0        0        0        0        0        0  ...     130   \n",
       "3          0        0        0        0        0        0  ...      17   \n",
       "4          0        0        0        0        0        0  ...       2   \n",
       "..       ...      ...      ...      ...      ...      ...  ...     ...   \n",
       "259        0        0        0        0        0        0  ...       0   \n",
       "260        0        0        0        0        0        0  ...       0   \n",
       "261        0        0        0        0        0        0  ...       0   \n",
       "262        0        0        0        0        0        0  ...       0   \n",
       "263        0        0        0        0        0        0  ...       0   \n",
       "\n",
       "     4/5/20  4/6/20  4/7/20  4/8/20  4/9/20  4/10/20  4/11/20  4/12/20  \\\n",
       "0         7      11      14      14      15       15       18       18   \n",
       "1        20      21      22      22      23       23       23       23   \n",
       "2       152     173     193     205     235      256      275      293   \n",
       "3        18      21      22      23      25       26       26       29   \n",
       "4         2       2       2       2       2        2        2        2   \n",
       "..      ...     ...     ...     ...     ...      ...      ...      ...   \n",
       "259       0       0       0       0       0        0        0        0   \n",
       "260       0       0       0       0       0        0        0        0   \n",
       "261       0       0       0       0       0        0        0        0   \n",
       "262       0       0       0       0       0        0        0        0   \n",
       "263       0       0       0       0       0        0        0        0   \n",
       "\n",
       "     4/13/20  \n",
       "0         21  \n",
       "1         23  \n",
       "2        313  \n",
       "3         29  \n",
       "4          2  \n",
       "..       ...  \n",
       "259        0  \n",
       "260        0  \n",
       "261        0  \n",
       "262        0  \n",
       "263        0  \n",
       "\n",
       "[264 rows x 87 columns]"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 7\n",
    "# loading in the global deaths file\n",
    "globalDeaths = pd.read_csv(\"global-deaths.csv\")\n",
    "globalDeaths"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>1/22/20</th>\n",
       "      <th>1/23/20</th>\n",
       "      <th>1/24/20</th>\n",
       "      <th>1/25/20</th>\n",
       "      <th>1/26/20</th>\n",
       "      <th>1/27/20</th>\n",
       "      <th>...</th>\n",
       "      <th>4/4/20</th>\n",
       "      <th>4/5/20</th>\n",
       "      <th>4/6/20</th>\n",
       "      <th>4/7/20</th>\n",
       "      <th>4/8/20</th>\n",
       "      <th>4/9/20</th>\n",
       "      <th>4/10/20</th>\n",
       "      <th>4/11/20</th>\n",
       "      <th>4/12/20</th>\n",
       "      <th>4/13/20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>29</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>99</td>\n",
       "      <td>104</td>\n",
       "      <td>116</td>\n",
       "      <td>131</td>\n",
       "      <td>154</td>\n",
       "      <td>165</td>\n",
       "      <td>182</td>\n",
       "      <td>197</td>\n",
       "      <td>217</td>\n",
       "      <td>232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>113</td>\n",
       "      <td>237</td>\n",
       "      <td>347</td>\n",
       "      <td>405</td>\n",
       "      <td>460</td>\n",
       "      <td>591</td>\n",
       "      <td>601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>39</td>\n",
       "      <td>52</td>\n",
       "      <td>58</td>\n",
       "      <td>71</td>\n",
       "      <td>71</td>\n",
       "      <td>128</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>NaN</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>250 rows × 87 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Province/State         Country/Region        Lat       Long  \\\n",
       "0                          NaN            Afghanistan  33.000000  65.000000   \n",
       "1                          NaN                Albania  41.153300  20.168300   \n",
       "2                          NaN                Algeria  28.033900   1.659600   \n",
       "3                          NaN                Andorra  42.506300   1.521800   \n",
       "4                          NaN                 Angola -11.202700  17.873900   \n",
       "..                         ...                    ...        ...        ...   \n",
       "245  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "246                        NaN            South Sudan   6.877000  31.307000   \n",
       "247                        NaN         Western Sahara  24.215500 -12.885800   \n",
       "248                        NaN  Sao Tome and Principe   0.186360   6.613081   \n",
       "249                        NaN                  Yemen  15.552727  48.516388   \n",
       "\n",
       "     1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  1/27/20  ...  4/4/20  \\\n",
       "0          0        0        0        0        0        0  ...      10   \n",
       "1          0        0        0        0        0        0  ...      99   \n",
       "2          0        0        0        0        0        0  ...      90   \n",
       "3          0        0        0        0        0        0  ...      21   \n",
       "4          0        0        0        0        0        0  ...       2   \n",
       "..       ...      ...      ...      ...      ...      ...  ...     ...   \n",
       "245        0        0        0        0        0        0  ...       0   \n",
       "246        0        0        0        0        0        0  ...       0   \n",
       "247        0        0        0        0        0        0  ...       0   \n",
       "248        0        0        0        0        0        0  ...       0   \n",
       "249        0        0        0        0        0        0  ...       0   \n",
       "\n",
       "     4/5/20  4/6/20  4/7/20  4/8/20  4/9/20  4/10/20  4/11/20  4/12/20  \\\n",
       "0        15      18      18      29      32       32       32       32   \n",
       "1       104     116     131     154     165      182      197      217   \n",
       "2        90      90     113     237     347      405      460      591   \n",
       "3        26      31      39      52      58       71       71      128   \n",
       "4         2       2       2       2       2        2        4        4   \n",
       "..      ...     ...     ...     ...     ...      ...      ...      ...   \n",
       "245       0       0       0       0       0        0        0        0   \n",
       "246       0       0       0       0       0        0        0        0   \n",
       "247       0       0       0       0       0        0        0        0   \n",
       "248       0       0       0       0       0        0        0        0   \n",
       "249       0       0       0       0       0        0        0        0   \n",
       "\n",
       "     4/13/20  \n",
       "0         32  \n",
       "1        232  \n",
       "2        601  \n",
       "3        128  \n",
       "4          4  \n",
       "..       ...  \n",
       "245        0  \n",
       "246        0  \n",
       "247        0  \n",
       "248        0  \n",
       "249        0  \n",
       "\n",
       "[250 rows x 87 columns]"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 7\n",
    "# loading in the global recovered file\n",
    "globalRecovered = pd.read_csv(\"global-recoveries.csv\")\n",
    "globalRecovered"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>1/22/20</th>\n",
       "      <th>1/23/20</th>\n",
       "      <th>1/24/20</th>\n",
       "      <th>1/25/20</th>\n",
       "      <th>1/26/20</th>\n",
       "      <th>1/27/20</th>\n",
       "      <th>...</th>\n",
       "      <th>4/4/20</th>\n",
       "      <th>4/5/20</th>\n",
       "      <th>4/6/20</th>\n",
       "      <th>4/7/20</th>\n",
       "      <th>4/8/20</th>\n",
       "      <th>4/9/20</th>\n",
       "      <th>4/10/20</th>\n",
       "      <th>4/11/20</th>\n",
       "      <th>4/12/20</th>\n",
       "      <th>4/13/20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>21</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>130</td>\n",
       "      <td>152</td>\n",
       "      <td>173</td>\n",
       "      <td>193</td>\n",
       "      <td>205</td>\n",
       "      <td>235</td>\n",
       "      <td>256</td>\n",
       "      <td>275</td>\n",
       "      <td>293</td>\n",
       "      <td>313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>17</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>26</td>\n",
       "      <td>26</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>261</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>262</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>263</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>264 rows × 87 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Province/State         Country/Region        Lat       Long  \\\n",
       "0                            0            Afghanistan  33.000000  65.000000   \n",
       "1                            0                Albania  41.153300  20.168300   \n",
       "2                            0                Algeria  28.033900   1.659600   \n",
       "3                            0                Andorra  42.506300   1.521800   \n",
       "4                            0                 Angola -11.202700  17.873900   \n",
       "..                         ...                    ...        ...        ...   \n",
       "259  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "260                          0            South Sudan   6.877000  31.307000   \n",
       "261                          0         Western Sahara  24.215500 -12.885800   \n",
       "262                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "263                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "     1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  1/27/20  ...  4/4/20  \\\n",
       "0          0        0        0        0        0        0  ...       7   \n",
       "1          0        0        0        0        0        0  ...      20   \n",
       "2          0        0        0        0        0        0  ...     130   \n",
       "3          0        0        0        0        0        0  ...      17   \n",
       "4          0        0        0        0        0        0  ...       2   \n",
       "..       ...      ...      ...      ...      ...      ...  ...     ...   \n",
       "259        0        0        0        0        0        0  ...       0   \n",
       "260        0        0        0        0        0        0  ...       0   \n",
       "261        0        0        0        0        0        0  ...       0   \n",
       "262        0        0        0        0        0        0  ...       0   \n",
       "263        0        0        0        0        0        0  ...       0   \n",
       "\n",
       "     4/5/20  4/6/20  4/7/20  4/8/20  4/9/20  4/10/20  4/11/20  4/12/20  \\\n",
       "0         7      11      14      14      15       15       18       18   \n",
       "1        20      21      22      22      23       23       23       23   \n",
       "2       152     173     193     205     235      256      275      293   \n",
       "3        18      21      22      23      25       26       26       29   \n",
       "4         2       2       2       2       2        2        2        2   \n",
       "..      ...     ...     ...     ...     ...      ...      ...      ...   \n",
       "259       0       0       0       0       0        0        0        0   \n",
       "260       0       0       0       0       0        0        0        0   \n",
       "261       0       0       0       0       0        0        0        0   \n",
       "262       0       0       0       0       0        0        0        0   \n",
       "263       0       0       0       0       0        0        0        0   \n",
       "\n",
       "     4/13/20  \n",
       "0         21  \n",
       "1         23  \n",
       "2        313  \n",
       "3         29  \n",
       "4          2  \n",
       "..       ...  \n",
       "259        0  \n",
       "260        0  \n",
       "261        0  \n",
       "262        0  \n",
       "263        0  \n",
       "\n",
       "[264 rows x 87 columns]"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 7\n",
    "# cleaning global deaths file\n",
    "globalDeathsCleaned = loadAndCleanData(\"global-deaths.csv\")\n",
    "globalDeathsCleaned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [],
   "source": [
    "def correctDateFormatDeaths(data):\n",
    "    data = data.melt(id_vars=data.columns[0:4], var_name=\"Date\", value_name=\"Deaths\")\n",
    "    data[\"Date\"] = pd.to_datetime(data[\"Date\"])\n",
    "    return data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>Date</th>\n",
       "      <th>Deaths</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21907</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21908</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21909</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21910</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21911</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21912 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Province/State         Country/Region        Lat       Long  \\\n",
       "0                              0            Afghanistan  33.000000  65.000000   \n",
       "1                              0                Albania  41.153300  20.168300   \n",
       "2                              0                Algeria  28.033900   1.659600   \n",
       "3                              0                Andorra  42.506300   1.521800   \n",
       "4                              0                 Angola -11.202700  17.873900   \n",
       "...                          ...                    ...        ...        ...   \n",
       "21907  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "21908                          0            South Sudan   6.877000  31.307000   \n",
       "21909                          0         Western Sahara  24.215500 -12.885800   \n",
       "21910                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "21911                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "            Date  Deaths  \n",
       "0     2020-01-22       0  \n",
       "1     2020-01-22       0  \n",
       "2     2020-01-22       0  \n",
       "3     2020-01-22       0  \n",
       "4     2020-01-22       0  \n",
       "...          ...     ...  \n",
       "21907 2020-04-13       0  \n",
       "21908 2020-04-13       0  \n",
       "21909 2020-04-13       0  \n",
       "21910 2020-04-13       0  \n",
       "21911 2020-04-13       0  \n",
       "\n",
       "[21912 rows x 6 columns]"
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 7 \n",
    "# correcting date format on global deaths\n",
    "globalDeathsComplete = correctDateFormatDeaths(globalDeathsCleaned)\n",
    "globalDeathsComplete"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>1/22/20</th>\n",
       "      <th>1/23/20</th>\n",
       "      <th>1/24/20</th>\n",
       "      <th>1/25/20</th>\n",
       "      <th>1/26/20</th>\n",
       "      <th>1/27/20</th>\n",
       "      <th>...</th>\n",
       "      <th>4/4/20</th>\n",
       "      <th>4/5/20</th>\n",
       "      <th>4/6/20</th>\n",
       "      <th>4/7/20</th>\n",
       "      <th>4/8/20</th>\n",
       "      <th>4/9/20</th>\n",
       "      <th>4/10/20</th>\n",
       "      <th>4/11/20</th>\n",
       "      <th>4/12/20</th>\n",
       "      <th>4/13/20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>29</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>99</td>\n",
       "      <td>104</td>\n",
       "      <td>116</td>\n",
       "      <td>131</td>\n",
       "      <td>154</td>\n",
       "      <td>165</td>\n",
       "      <td>182</td>\n",
       "      <td>197</td>\n",
       "      <td>217</td>\n",
       "      <td>232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>113</td>\n",
       "      <td>237</td>\n",
       "      <td>347</td>\n",
       "      <td>405</td>\n",
       "      <td>460</td>\n",
       "      <td>591</td>\n",
       "      <td>601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>39</td>\n",
       "      <td>52</td>\n",
       "      <td>58</td>\n",
       "      <td>71</td>\n",
       "      <td>71</td>\n",
       "      <td>128</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>250 rows × 87 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Province/State         Country/Region        Lat       Long  \\\n",
       "0                            0            Afghanistan  33.000000  65.000000   \n",
       "1                            0                Albania  41.153300  20.168300   \n",
       "2                            0                Algeria  28.033900   1.659600   \n",
       "3                            0                Andorra  42.506300   1.521800   \n",
       "4                            0                 Angola -11.202700  17.873900   \n",
       "..                         ...                    ...        ...        ...   \n",
       "245  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "246                          0            South Sudan   6.877000  31.307000   \n",
       "247                          0         Western Sahara  24.215500 -12.885800   \n",
       "248                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "249                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "     1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  1/27/20  ...  4/4/20  \\\n",
       "0          0        0        0        0        0        0  ...      10   \n",
       "1          0        0        0        0        0        0  ...      99   \n",
       "2          0        0        0        0        0        0  ...      90   \n",
       "3          0        0        0        0        0        0  ...      21   \n",
       "4          0        0        0        0        0        0  ...       2   \n",
       "..       ...      ...      ...      ...      ...      ...  ...     ...   \n",
       "245        0        0        0        0        0        0  ...       0   \n",
       "246        0        0        0        0        0        0  ...       0   \n",
       "247        0        0        0        0        0        0  ...       0   \n",
       "248        0        0        0        0        0        0  ...       0   \n",
       "249        0        0        0        0        0        0  ...       0   \n",
       "\n",
       "     4/5/20  4/6/20  4/7/20  4/8/20  4/9/20  4/10/20  4/11/20  4/12/20  \\\n",
       "0        15      18      18      29      32       32       32       32   \n",
       "1       104     116     131     154     165      182      197      217   \n",
       "2        90      90     113     237     347      405      460      591   \n",
       "3        26      31      39      52      58       71       71      128   \n",
       "4         2       2       2       2       2        2        4        4   \n",
       "..      ...     ...     ...     ...     ...      ...      ...      ...   \n",
       "245       0       0       0       0       0        0        0        0   \n",
       "246       0       0       0       0       0        0        0        0   \n",
       "247       0       0       0       0       0        0        0        0   \n",
       "248       0       0       0       0       0        0        0        0   \n",
       "249       0       0       0       0       0        0        0        0   \n",
       "\n",
       "     4/13/20  \n",
       "0         32  \n",
       "1        232  \n",
       "2        601  \n",
       "3        128  \n",
       "4          4  \n",
       "..       ...  \n",
       "245        0  \n",
       "246        0  \n",
       "247        0  \n",
       "248        0  \n",
       "249        0  \n",
       "\n",
       "[250 rows x 87 columns]"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 7\n",
    "# cleaning global recovery data\n",
    "globalRecoveredCleaned = loadAndCleanData(\"global-recoveries.csv\")\n",
    "globalRecoveredCleaned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [],
   "source": [
    "def correctDateFormatRecovered(data):\n",
    "    data = data.melt(id_vars=data.columns[0:4], var_name=\"Date\", value_name=\"Recovered\")\n",
    "    data[\"Date\"] = pd.to_datetime(data[\"Date\"])\n",
    "    return data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>Date</th>\n",
       "      <th>Recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20745</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20746</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20747</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20748</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20749</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>20750 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Province/State         Country/Region        Lat       Long  \\\n",
       "0                              0            Afghanistan  33.000000  65.000000   \n",
       "1                              0                Albania  41.153300  20.168300   \n",
       "2                              0                Algeria  28.033900   1.659600   \n",
       "3                              0                Andorra  42.506300   1.521800   \n",
       "4                              0                 Angola -11.202700  17.873900   \n",
       "...                          ...                    ...        ...        ...   \n",
       "20745  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "20746                          0            South Sudan   6.877000  31.307000   \n",
       "20747                          0         Western Sahara  24.215500 -12.885800   \n",
       "20748                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "20749                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "            Date  Recovered  \n",
       "0     2020-01-22          0  \n",
       "1     2020-01-22          0  \n",
       "2     2020-01-22          0  \n",
       "3     2020-01-22          0  \n",
       "4     2020-01-22          0  \n",
       "...          ...        ...  \n",
       "20745 2020-04-13          0  \n",
       "20746 2020-04-13          0  \n",
       "20747 2020-04-13          0  \n",
       "20748 2020-04-13          0  \n",
       "20749 2020-04-13          0  \n",
       "\n",
       "[20750 rows x 6 columns]"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 7\n",
    "# correcting date format on global recoveries\n",
    "globalRecoveredComplete = correctDateFormatRecovered(globalRecoveredCleaned)\n",
    "globalRecoveredComplete"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21907</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21908</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21909</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21910</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21911</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21912 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Province/State         Country/Region        Lat       Long  \\\n",
       "0                              0            Afghanistan  33.000000  65.000000   \n",
       "1                              0                Albania  41.153300  20.168300   \n",
       "2                              0                Algeria  28.033900   1.659600   \n",
       "3                              0                Andorra  42.506300   1.521800   \n",
       "4                              0                 Angola -11.202700  17.873900   \n",
       "...                          ...                    ...        ...        ...   \n",
       "21907  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "21908                          0            South Sudan   6.877000  31.307000   \n",
       "21909                          0         Western Sahara  24.215500 -12.885800   \n",
       "21910                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "21911                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "            Date  Confirmed  Deaths  \n",
       "0     2020-01-22          0       0  \n",
       "1     2020-01-22          0       0  \n",
       "2     2020-01-22          0       0  \n",
       "3     2020-01-22          0       0  \n",
       "4     2020-01-22          0       0  \n",
       "...          ...        ...     ...  \n",
       "21907 2020-04-13          1       0  \n",
       "21908 2020-04-13          4       0  \n",
       "21909 2020-04-13          6       0  \n",
       "21910 2020-04-13          4       0  \n",
       "21911 2020-04-13          1       0  \n",
       "\n",
       "[21912 rows x 7 columns]"
      ]
     },
     "execution_count": 178,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mergeData(globalCasesComplete, globalDeathsComplete, \"Deaths\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21907</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21908</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21909</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21910</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21911</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21912 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Province/State         Country/Region        Lat       Long  \\\n",
       "0                              0            Afghanistan  33.000000  65.000000   \n",
       "1                              0                Albania  41.153300  20.168300   \n",
       "2                              0                Algeria  28.033900   1.659600   \n",
       "3                              0                Andorra  42.506300   1.521800   \n",
       "4                              0                 Angola -11.202700  17.873900   \n",
       "...                          ...                    ...        ...        ...   \n",
       "21907  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "21908                          0            South Sudan   6.877000  31.307000   \n",
       "21909                          0         Western Sahara  24.215500 -12.885800   \n",
       "21910                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "21911                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "            Date  Confirmed  Deaths  \n",
       "0     2020-01-22          0       0  \n",
       "1     2020-01-22          0       0  \n",
       "2     2020-01-22          0       0  \n",
       "3     2020-01-22          0       0  \n",
       "4     2020-01-22          0       0  \n",
       "...          ...        ...     ...  \n",
       "21907 2020-04-13          1       0  \n",
       "21908 2020-04-13          4       0  \n",
       "21909 2020-04-13          6       0  \n",
       "21910 2020-04-13          4       0  \n",
       "21911 2020-04-13          1       0  \n",
       "\n",
       "[21912 rows x 7 columns]"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "firstMerge = mergeData(globalCasesComplete, globalDeathsComplete, \"Deaths\")\n",
    "firstMerge"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [],
   "source": [
    "#globalData = mergeData(globalCasesComplete, globalRecoveredComplete, \"Recovered\")\n",
    "globalData = mergeData(firstMerge, globalRecoveredComplete, \"Recovered\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.153300</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.033900</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.506300</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.202700</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21907</th>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>France</td>\n",
       "      <td>46.885200</td>\n",
       "      <td>-56.315900</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21908</th>\n",
       "      <td>0</td>\n",
       "      <td>South Sudan</td>\n",
       "      <td>6.877000</td>\n",
       "      <td>31.307000</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21909</th>\n",
       "      <td>0</td>\n",
       "      <td>Western Sahara</td>\n",
       "      <td>24.215500</td>\n",
       "      <td>-12.885800</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21910</th>\n",
       "      <td>0</td>\n",
       "      <td>Sao Tome and Principe</td>\n",
       "      <td>0.186360</td>\n",
       "      <td>6.613081</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21911</th>\n",
       "      <td>0</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>15.552727</td>\n",
       "      <td>48.516388</td>\n",
       "      <td>2020-04-13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21912 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Province/State         Country/Region        Lat       Long  \\\n",
       "0                              0            Afghanistan  33.000000  65.000000   \n",
       "1                              0                Albania  41.153300  20.168300   \n",
       "2                              0                Algeria  28.033900   1.659600   \n",
       "3                              0                Andorra  42.506300   1.521800   \n",
       "4                              0                 Angola -11.202700  17.873900   \n",
       "...                          ...                    ...        ...        ...   \n",
       "21907  Saint Pierre and Miquelon                 France  46.885200 -56.315900   \n",
       "21908                          0            South Sudan   6.877000  31.307000   \n",
       "21909                          0         Western Sahara  24.215500 -12.885800   \n",
       "21910                          0  Sao Tome and Principe   0.186360   6.613081   \n",
       "21911                          0                  Yemen  15.552727  48.516388   \n",
       "\n",
       "            Date  Confirmed  Deaths  Recovered  \n",
       "0     2020-01-22          0       0        0.0  \n",
       "1     2020-01-22          0       0        0.0  \n",
       "2     2020-01-22          0       0        0.0  \n",
       "3     2020-01-22          0       0        0.0  \n",
       "4     2020-01-22          0       0        0.0  \n",
       "...          ...        ...     ...        ...  \n",
       "21907 2020-04-13          1       0        NaN  \n",
       "21908 2020-04-13          4       0        NaN  \n",
       "21909 2020-04-13          6       0        NaN  \n",
       "21910 2020-04-13          4       0        NaN  \n",
       "21911 2020-04-13          1       0        NaN  \n",
       "\n",
       "[21912 rows x 8 columns]"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "globalData"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 10\n",
    "def plotTimeline(data, time, val):\n",
    "    sns.lineplot(data=data, x=time, y=val)\n",
    "    plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.6/site-packages/pandas/plotting/_matplotlib/converter.py:103: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.\n",
      "\n",
      "To register the converters:\n",
      "\t>>> from pandas.plotting import register_matplotlib_converters\n",
      "\t>>> register_matplotlib_converters()\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 11\n",
    "plotTimeline(globalData, \"Date\", \"Confirmed\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 11\n",
    "plotTimeline(globalData, \"Date\", \"Deaths\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 11\n",
    "plotTimeline(globalData, \"Date\", \"Recovered\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 12\n",
    "def plotMultipleTimeLines(data, time, val, cat):\n",
    "    sns.lineplot(data=data, x=time, y=val, hue=cat)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 13\n",
    "plotMultipleTimeLines(globalData, \"Date\", \"Recovered\", \"Deaths\")\n",
    "plotMultipleTimeLines(globalData, \"Date\", \"Confirmed\", \"Deaths\")\n",
    "plotMultipleTimeLines(globalData, \"Date\", \"Confirmed\", \"Recovered\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-182-f8953b504c0c>, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-182-f8953b504c0c>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    globalCasesComplete 1\u001b[0m\n\u001b[0m                        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "globalRecoveredComplete\n",
    "globalDeathsComplete\n",
    "globalCasesComplete 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
